// <auto-generated />
using System;
using MTUAuthService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTUAuthService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MTUModelContainer.Database.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountCurrency")
                        .IsRequired()
                        .HasColumnType("VARCHAR(32)")
                        .HasColumnName("currency");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creationDate");

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("defaultAccount");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("owner_id");

                    b.Property<bool>("SystemLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("systemLocked");

                    b.Property<bool>("UserLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("userLocked");

                    b.HasKey("AccountId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("MTUModelContainer.Database.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creationDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("EmailVerificationCode")
                        .HasColumnType("longtext")
                        .HasColumnName("emailVerifCode");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("emailVerif");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("lastName");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext")
                        .HasColumnName("middleName");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pwd");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phoneNum");

                    b.Property<string>("PhoneVerificationCode")
                        .HasColumnType("longtext")
                        .HasColumnName("phoneVerifCode");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("phoneVerif");

                    b.Property<string>("Sex")
                        .HasColumnType("varchar(8)")
                        .HasColumnName("sex");

                    b.Property<string>("TwoFASecret")
                        .HasColumnType("longtext")
                        .HasColumnName("twofasecret");

                    b.Property<bool>("Verified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("verified");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
