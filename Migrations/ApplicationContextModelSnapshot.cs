// <auto-generated />
using System;
using MTUAuthService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTUAuthService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MTUBankBase.Database.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountCurrency")
                        .IsRequired()
                        .HasColumnType("VARCHAR(32)")
                        .HasColumnName("currency");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creationDate");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("owner_id");

                    b.Property<bool>("SystemLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("systemLocked");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("UserLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("userLocked");

                    b.HasKey("AccountId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("UserId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("MTUBankBase.Database.Models.Token", b =>
                {
                    b.Property<string>("TokenValue")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("token");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creationDate");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("owner");

                    b.Property<int>("TokenType")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("TokenValue");

                    b.HasIndex("OwnerId");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("MTUBankBase.Database.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creationDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("lastName");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext")
                        .HasColumnName("middleName");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pwd");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phoneNum");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("sex");

                    b.Property<string>("TwoFASecret")
                        .HasColumnType("longtext")
                        .HasColumnName("twofasecret");

                    b.Property<bool>("Verified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("verified");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MTUBankBase.Database.Models.Account", b =>
                {
                    b.HasOne("MTUBankBase.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTUBankBase.Database.Models.User", null)
                        .WithMany("Accounts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MTUBankBase.Database.Models.Token", b =>
                {
                    b.HasOne("MTUBankBase.Database.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MTUBankBase.Database.Models.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
